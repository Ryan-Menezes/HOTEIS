DROP DATABASE IF EXISTS hoteis;

CREATE DATABASE IF NOT EXISTS hoteis
DEFAULT CHARACTER SET utf8
DEFAULT COLLATE utf8_general_ci;

USE hoteis;

-- TABELA QUE ARMAZENARÁ OS USUÁRIOS DO SISTEMA

CREATE TABLE IF NOT EXISTS usuarios(
	cpf CHAR(11) PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    sobrenome VARCHAR(100) NOT NULL,
    status_user ENUM('B', 'D') NOT NULL DEFAULT 'D' COMMENT 'B-Bloqueado | D-Desbloqueado',
    email VARCHAR(100) NOT NULL UNIQUE,
    senha VARCHAR(100) NOT NULL,
    acesso ENUM('A', 'C') NOT NULL DEFAULT 'C' COMMENT 'A-Administrador | C-Cliente',
    curl VARCHAR(100) NOT NULL UNIQUE,
    ativo BOOL NOT NULL DEFAULT FALSE,
    img_perfil MEDIUMBLOB NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL ON UPDATE CURRENT_TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted_at DATETIME,
    FULLTEXT KEY idx_usuarios_busca(cpf, email, nome, sobrenome)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- TABELA QUE ARMAZENARÁ AS NOTIFICAÇÕES DOS USUÁRIOS DO SISTEMA

CREATE TABLE IF NOT EXISTS notificacoes(
	id_notificacao INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    titulo VARCHAR(100) NOT NULL,
    mensagem MEDIUMTEXT NOT NULL,
    visualizado BOOL NOT NULL DEFAULT FALSE,
    cpf_usuario CHAR(11) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL ON UPDATE CURRENT_TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_notificacoes_cpf_usuario FOREIGN KEY (cpf_usuario) REFERENCES usuarios(cpf) ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- TABELA QUE ARMAZENARÁ OS TIPOS DE QUARTOS DO SISTEMA

CREATE TABLE IF NOT EXISTS tipos_quarto(
	id_tipo_quarto INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    nome_tipo VARCHAR(50) NOT NULL
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- TABELA QUE ARMAZENARÁ OS QUARTOS DO SISTEMA

CREATE TABLE IF NOT EXISTS quartos(
	numero_quarto SMALLINT UNSIGNED PRIMARY KEY,
    andar TINYINT UNSIGNED NOT NULL,
    preco_hora DECIMAL(10, 2) UNSIGNED NOT NULL,
    status_quarto ENUM('D', 'I') NOT NULL DEFAULT 'D' COMMENT 'D-Disponível | I-Indisponível',
    id_tipo_quarto INT UNSIGNED,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL ON UPDATE CURRENT_TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_quartos_id_tipo_quarto FOREIGN KEY (id_tipo_quarto) REFERENCES tipos_quarto(id_tipo_quarto) ON DELETE SET NULL ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- TABELA QUE ARMAZENARÁ AS RESERVAS DO SISTEMA

CREATE TABLE IF NOT EXISTS reservas(
	id_reserva SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    preco_hora DECIMAL(10, 2) UNSIGNED NOT NULL,
    data_reserva TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data_encerrar TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status_reserva ENUM('R', 'P', 'C') NOT NULL,
    numero_quarto SMALLINT UNSIGNED NOT NULL,
    cpf_usuario CHAR(11) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL ON UPDATE CURRENT_TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_reservas_reservas FOREIGN KEY (numero_quarto) REFERENCES quartos(numero_quarto) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_reservas_cpf_usuario FOREIGN KEY (cpf_usuario) REFERENCES usuarios(cpf) ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- TABELA QUE ARMAZENARÁ OS PEDIDOS DE RESERVAS DOS USUÁRIOS NO SISTEMA

CREATE TABLE IF NOT EXISTS pedidos_reserva(
	id_pedido_reserva SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    preco_hora DECIMAL(10, 2) UNSIGNED NOT NULL,
    data_reserva TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data_encerrar TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status_pedido ENUM('P', 'N', 'A') NOT NULL DEFAULT 'P' COMMENT 'P-PENDENTE | N-NEGADO | A-ACEITO',
    numero_quarto SMALLINT UNSIGNED NOT NULL,
    cpf_usuario CHAR(11) NOT NULL,
    CONSTRAINT fk_pedidos_reserva_reservas FOREIGN KEY (numero_quarto) REFERENCES quartos(numero_quarto) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_pedidos_reserva_cpf_usuario FOREIGN KEY (cpf_usuario) REFERENCES usuarios(cpf) ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- TABELA QUE ARMAZENARÁ OS PAGAMENTOS DO SISTEMA

CREATE TABLE IF NOT EXISTS pagamentos(
	id_pagamento SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    payment_id VARCHAR(50) NOT NULL,
    valor_total DECIMAL(10, 2) UNSIGNED NOT NULL,
    status_pagamento VARCHAR(50) NOT NULL,
    id_reserva SMALLINT UNSIGNED,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL ON UPDATE CURRENT_TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_pagamentos_id_reserva FOREIGN KEY (id_reserva) REFERENCES reservas(id_reserva) ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8;